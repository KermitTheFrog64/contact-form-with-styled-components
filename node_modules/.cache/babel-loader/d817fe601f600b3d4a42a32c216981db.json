{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/07/contact-form-with-styled-components/src/components/ContactForm.jsx\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst H1 = styled.h1`\nwidth: 175px;\nheight: 39px;\nfont-weight: 700;\nfont-size: 32px;\nline-height: 39px;\ncolor: rgba(0, 0, 0, 0.64);\n`;\n_c = H1;\nconst Description = styled.div`\nwidth: 288px;\nheight: 57px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 19px;\ncolor: rgba(0, 0, 0, 0.45);\n`;\n_c2 = Description;\nconst Email = styled.Field`\nwidth: 288px;\nheight: 59px;\nbackground: #FFFFFF;\nborder: 1px solid #CBD5E0;\nborder-radius: 6px;\n`;\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(H1, {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      children: [\"If you have any questions please \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 53\n      }, this), \" don't hesitate to contact us.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 89\n      }, this), \" We're here to help!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        message: ''\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        message: Yup.string().max(15, 'Must be 15 characters or less').required('Required')\n      }),\n      onSubmit: async values => {\n        await new Promise(r => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"message\",\n          type: \"text\",\n          as: \"textarea\",\n          placeholder: \"Your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ContactForm;\nexport default ContactForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"H1\");\n$RefreshReg$(_c2, \"Description\");\n$RefreshReg$(_c3, \"ContactForm\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","styled","H1","h1","Description","div","Email","ContactForm","email","message","object","string","required","max","values","Promise","r","setTimeout","alert","JSON","stringify"],"sources":["/home/natalie/ReactProjects/07/contact-form-with-styled-components/src/components/ContactForm.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styled from 'styled-components'\n\nconst H1 = styled.h1`\nwidth: 175px;\nheight: 39px;\nfont-weight: 700;\nfont-size: 32px;\nline-height: 39px;\ncolor: rgba(0, 0, 0, 0.64);\n`\n\nconst Description = styled.div`\nwidth: 288px;\nheight: 57px;\nfont-weight: 500;\nfont-size: 16px;\nline-height: 19px;\ncolor: rgba(0, 0, 0, 0.45);\n`\n\nconst Email = styled.Field`\nwidth: 288px;\nheight: 59px;\nbackground: #FFFFFF;\nborder: 1px solid #CBD5E0;\nborder-radius: 6px;\n`\n\nconst ContactForm = () => {\n  return (\n    <div>\n      <H1>Contact Us</H1>\n      <Description>If you have any questions please <br /> don't hesitate to contact us.<br /> We're here to help!</Description>\n    <Formik\n\n      initialValues={{ email: '', message: '' }}\n\n      validationSchema={Yup.object({\n        email: Yup.string().email('Invalid email address').required('Required'),\n        message: Yup.string()\n          .max(15, 'Must be 15 characters or less')\n          .required('Required')\n\n      })}\n\n      onSubmit={async (values) => {\n        await new Promise((r) => setTimeout(r, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n    >\n      <Form>\n\n        <Field name=\"email\" type=\"email\" placeholder=\"Your email\" />\n        <ErrorMessage name=\"email\" />\n\n        <Field name=\"message\" type=\"text\" as='textarea' placeholder=\"Your message\" />\n        <ErrorMessage name=\"message\" />\n\n        <button type=\"submit\">Send</button>\n      </Form>\n    </Formik>\n    </div>\n  );\n};\n\nexport default ContactForm;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,EAAE,GAAGD,MAAM,CAACE,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,E;AASN,MAAME,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,W;AASN,MAAME,KAAK,GAAGL,MAAM,CAACJ,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMU,WAAW,GAAG,MAAM;EACxB,oBACE;IAAA,wBACE,QAAC,EAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,WAAD;MAAA,6DAA8C;QAAA;QAAA;QAAA;MAAA,QAA9C,iDAAkF;QAAA;QAAA;QAAA;MAAA,QAAlF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGA,QAAC,MAAD;MAEE,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAT;QAAaC,OAAO,EAAE;MAAtB,CAFjB;MAIE,gBAAgB,EAAET,GAAG,CAACU,MAAJ,CAAW;QAC3BF,KAAK,EAAER,GAAG,CAACW,MAAJ,GAAaH,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD,CADoB;QAE3BH,OAAO,EAAET,GAAG,CAACW,MAAJ,GACNE,GADM,CACF,EADE,EACE,+BADF,EAEND,QAFM,CAEG,UAFH;MAFkB,CAAX,CAJpB;MAYE,QAAQ,EAAE,MAAOE,MAAP,IAAkB;QAC1B,MAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAI,GAAJ,CAA7B,CAAN;QACAE,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;MACD,CAfH;MAAA,uBAiBE,QAAC,IAAD;QAAA,wBAEE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,IAAI,EAAC,OAAzB;UAAiC,WAAW,EAAC;QAA7C;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,YAAD;UAAc,IAAI,EAAC;QAAnB;UAAA;UAAA;UAAA;QAAA,QAHF,eAKE,QAAC,KAAD;UAAO,IAAI,EAAC,SAAZ;UAAsB,IAAI,EAAC,MAA3B;UAAkC,EAAE,EAAC,UAArC;UAAgD,WAAW,EAAC;QAA5D;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,YAAD;UAAc,IAAI,EAAC;QAAnB;UAAA;UAAA;UAAA;QAAA,QANF,eAQE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IAjBF;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CAnCD;;MAAMP,W;AAqCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}